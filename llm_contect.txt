# Архитектура проекта

Хочу переработать архитектуру проекта. Бизнесово логика делится на три блока:

---

## 1. Предподготовка данных для RAG

**Суть:**  
Данные могут быть в разных форматах: таблицы, PDF, документы, просто текст. Чтобы использовать их в RAG, нужно привести к единому формату (`вопрос/ответ`).

На этом этапе мы просто выделяем это как отдельную функцию. Пока не реализуем, считаем, что она уже существует и результатом её работы является файл `ecommerce_qa.json`.

**Вход:**  
- что-то с данными

**Выход:**  
- JSON формата вопрос/ответ

---

## 2. Загрузка данных и обработка знаний

**Суть:**  
После предыдущего шага у нас есть структура вопрос/ответ. Нужно чанкировать текст, прогнать через эмбеддинг, залить в векторную базу и подготовить интерфейс для поиска по этой базе.

Также нужно создать модель данных как единый интерфейс к поиску по базе — вне зависимости от того, какой тип векторной базы выбран.

**Вход:**  
- JSON в формате вопрос/ответ

**Выход:**  
- интерфейс по поиску в векторной базе, в которой загружены наши вопросы и ответы

**Атрибуты:**  
- размер чанка и размер overlap  
- модель через которую будем прогонять эмбеддинг  
- тип векторной базы (для начала это может быть две базы: просто список питона или pickle)  
- тип функции поиска по векторной базе (для начала можно реализовать косинусное сходство)

---

## 3. Обработка запроса пользователя

**Суть:**  
На этом этапе мы уже провели всю предподготовку и должны обработать пользовательский вопрос с помощью знаний, которые мы загрузили в векторную базу ранее. Для этого:

- берём запрос пользователя  
- прогоняем через эмбеддинг  
- находим топ N похожих записей  
- собираем единый промт  
- отправляем в LLM  
- выдаём ответ пользователю  
- оцениваем с помощью другого промта, насколько ответ был точным и релевантным (для аналитики)

**Вход:**  
- вопрос пользователя  
- интерфейс поиска по базе

**Выход:**  
- ответ пользователя  
- оценка ответа (в аналитику)

**Атрибуты:**  
- выбор модели LLM  
- модель эмбеддинга (та же, что и на прошлом шаге)  
- промт с плейсхолдерами для контекста и вопроса пользователя, а также суммаризацией предыдущего диалога

---

## Конфигурация

Все атрибуты я хочу хранить в одном файлике с конфигом, и каждый из микросервисов должен брать значения атрибутов из этого конфига.

Такая архитектура мне нужна для того, чтобы была возможность менять логику внутри блоков и при этом не ломать остальные.
